const path = require('path');
const webpack = require('webpack');
const extractTextPlugin = require('extract-text-webpack-plugin');
const OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');
const FileListPlugin = require('./plugins/filelistplugin');

module.exports = {
	entry: {
		main: './js/login.js',
		home: './app.js',
	},
	output: {
		publicPath: '/public/assets/', /* virtual path */
		filename: '[name].js',
		path: path.resolve(__dirname, 'dist')
	},
	plugins: [
		new extractTextPlugin("styles.css"),
		new webpack.BannerPlugin({
			banner: `\n Generated by Ihavrka:\n hash:[hash],\n chunkhash:[chunkhash],\n name:[name],\n filebase:[filebase],\n file:[file]\n`
		}),
		new OptimizeCssAssetsPlugin(),
		new FileListPlugin({ name: "filelist.md" })
	],
	resolveLoader: {
		modules: ['node_modules', path.resolve(__dirname, 'loaders')]
	},
	module: {
		rules: [
			{
				enforce: "pre",
				test: /\.js$/,
				exclude: /node_modules/,
				loader: "eslint-loader"
			},
			{
				test: /\.js$/,
				exclude: /node_modules/,
				use: ['babel-loader']
			},
			{
				test: /\.js$/,
				exclude: /node_modules/,
				use: [
					{
						loader: 'tik-to-any',
						options: {
							name: 'test'
						}
					},
					//execution starts from here to the upwards
					{
						loader: 'nik-to-tik',
						options: {
							name: 'tik'
						}
					}
				]
			},
			{
				test: /\.(sa|sc|c)ss$/,
				use: extractTextPlugin.extract({
					fallback: "style-loader",
					use: ['css-loader', 'sass-loader']
				})
			},
			{
				//A loader for webpack which transforms files into base64 URIs.
				test: /\.(png|woff|woff2|eot|ttf|svg)$/,
				exclude: /node_modules/,
				loader: 'url-loader'
			}
		]
	},
	optimization: {
		splitChunks: {
			chunks: 'all',
			name: 'shared'
		}
	},
	resolve: {
		extensions: ['.js', '.es6']
	}
};